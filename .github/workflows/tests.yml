# GitHub Actions workflow to test the code base.

name: Run Tests

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    container: candidj0/milo:base

    steps:
      # Checkout the latest code from the repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # Poetry cache depends on OS, Python version and Poetry version.
      - name: Cache Poetry cache
        if: ${{ !env.ACT }}
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}

      # virtualenv cache should depends on OS, Python version and `poetry.lock` (and optionally workflow files).
      - name: Cache Packages
        if: ${{ !env.ACT }}
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      # Redundant with super_linter but good to have
      - name: Lint code
        run: poetry run flake8 .

      - name: Format code
        run: poetry run black --check --diff .

      - name: Run tests
        run: poetry run python -m pytest
