# Run Tests GitHub Action configuration file
---
name: Run Tests

permissions: read-all

on:
  pull_request:

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  test:
    runs-on: self-hosted
    # runs-on: ubuntu-latest
    # container: dmml/milo:base

    steps:
      # needed for self-hosted runner since docker in docker not supported
      - name: Install dependencies
        run: sudo apt-get install -y libglu1-mesa-dev libgl1-mesa-dev libosmesa6-dev
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Set up Poetry
        run: pip install poetry poetry-dotenv-plugin

      # common for gh runner and self-hosted one
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Get Python version
        id: python_version
        run: |
          python_version="$(python --version 2>&1 | awk '{print $2}')"
          echo PYTHON_VERSION="$python_version" >> "$GITHUB_ENV"

      - name: Get Poetry version
        id: poetry_version
        run: |
          poetry_version="$(poetry --version | cut -d' ' -f3 | sed 's/[()]//g')"
          echo POETRY_VERSION="$poetry_version" >> "$GITHUB_ENV"

      - name: Cache Poetry cache
        if: ${{ !env.ACT }}
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{
            env.PYTHON_VERSION }}-${{
            env.POETRY_VERSION }}

      - name: Cache Packages
        if: ${{ !env.ACT }}
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-local-${{ runner.os }}-${{
            env.PYTHON_VERSION }}-${{
            hashFiles('poetry.lock') }}-${{
            hashFiles('.github/workflows/*.yml') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Run tests
        run: poetry run poe test
